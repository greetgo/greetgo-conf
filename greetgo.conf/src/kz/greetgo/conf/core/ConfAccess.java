package kz.greetgo.conf.core;

import java.util.Date;

/**
 * Интерфейс доступа к хранилищу конфигурационного файла в структурированном виде.
 * <p>
 * Работать просто с текстом оказалось неудобно, потому что:
 * Во-первых: хранить в SQL-ой БД текст конфига неудобно, да и в MongoDB тоже.
 * Ну а во-вторых: хотелось бы уметь работать с разными форматами конфига-файла, а так привязан только к одному
 */
public interface ConfAccess {

  /**
   * Загружает содержимое файла конфига. Если файла конфига нет, то возвращается null
   *
   * @return содержимое файла конфига или null, если файла нет
   */
  ConfContent load();

  /**
   * Записывает содержимое конфига в файл
   * <p>
   * Если файла нет, то он автоматически создастся (вместе со всеми необходимыми папками)
   *
   * @param confContent содержимое конфига или null (в этом случае файл будет удалён
   */
  void write(ConfContent confContent);

  /**
   * Возвращает последнее дату-время редактирования файла
   *
   * @return последняя дата-время редактирования файла, или null, если файла нет
   */
  Date lastModifiedAt();

}
